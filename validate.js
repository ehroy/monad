// validate.js
import { ethers } from "ethers";

// ABI dari fungsi `fulfillAvailableAdvancedOrders` (kemungkinan besar Seaport v1.5 atau OpenSea)
const abi = [
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "calls",
        type: "tuple[]",
        internalType: "struct Multicall.MulticallData[]",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "isPriceUpdate", type: "bool", internalType: "bool" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
    stateMutability: "nonpayable",
  },
];

// Ganti ini dengan data input hex yang ingin divalidasi:
const inputData =
  "0xe8bbf5d700000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000004a18ee66877236c9a66698648eb06565f225c9b20000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001fc694c21d80000000000000000000000006bb379a2056d1304e73012b99338f8f581ee2e180000000000000000000000000000000000000000000000000000000000000001574254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0a28194c940196f6d55be00000002000000160948c1c17e71a684f5d9e3d324ee6dd03412a0623438a5510409ac2886d37161daa43582211534104f4830264668a8b3900c199fa15f624e661666b14325af61c574254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0a28194c940196f6d55be000000020000001f9a0d369cc51636231e1716f76a8c0dd0f986d698ecd18d9588b7819442fe99f5cc44f7bc6d55d2447c39ede1ff0bf6630a3e0117a675b96002cb5a8c9a15e9d1b574254430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0a28194c940196f6d55be0000000200000015cb1f950def381665bb2ba9d3d5e9f62df229e1d1e255435653f679397c698dc1b8b901da4710c4c77f25232da59f9e06728f95dc2eca5e74eed4f654d1a74331c0003000000000002ed57011e000000000000000000000000000000000000cda16e9c25f429f4b01a87ff302ee7943f2d50150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000442f4a61d9000000000000000000000000000000000000000000000000000000000031943b0000000000000000000000003354b0d9d8d85b1c6e0bdd53283ea087cd35b2f400000000000000000000000000000000000000000000000000000000"; // potong jika terlalu panjang

try {
  const iface = new ethers.Interface(abi);
  const decoded = iface.decodeFunctionData("multicall", inputData);

  console.log("✅ Valid data:");
  console.dir(decoded, { depth: null });
} catch (err) {
  console.error("❌ Invalid or incompatible data:");
  console.error(err.message);
}
